const axios = require('axios');

const { ErrorHandler } = require('./errorUtils');

//https://stackoverflow.com/questions/54055935/my-call-async-await-returns-a-promise-pending-in-my-actions
const locationIQAPIRequest = async (APITOKEN, data, cb) => {//the cb function will be the next object from req, res, next

    try {

        const res = await axios(`https://us1.locationiq.com/v1/search.php?key=${APITOKEN}&q=${encodeURI(data)}&format=json`, { mode : 'cors' });            
        console.log(res);
        return [parseFloat(res.data[0].lat), parseFloat(res.data[0].lon)]; 

    } catch (err) {
        //the cb function will be the next object from req, res, next
        cb(new ErrorHandler(500 `Failed to connect to LocationIQ API ðŸŒ©`))
    }

} 

//the cb function will be the next object from req, res, next
const locationIQAPIMultipleRequest = async (APITOKEN, data, cb) => {
    const arr = [];

    for (let x = 0; x < data.length; x++) {
        arr.push(axios.get(`https://us1.locationiq.com/v1/search.php?key=${APITOKEN}&q=${encodeURI(data[x])}&format=json`, { mode : 'cors' }));
    }
      
    try {
        let res = await axios.all(arr);
        return res;        
    } catch (error) {
        //the cb function will be the next object from req, res, next
        cb(new ErrorHandler(500 `Failed to connect multiple times to LocationIQ API ðŸŒ©`))

    }

}

exports.prepareDataForDbInsertion = async (req, APITOKEN, next) => {

    if (req.body.collection === 'listing'){

        if (req.body.category === 'stay'){
        
            const dataToDb = {...req.body};   
    
            const latAndLon = await locationIQAPIRequest(APITOKEN, dataToDb.address, next);
    
            //combine the other request data with the additional details
            let combinedObjToDb = Object.assign( {}, dataToDb, { additionalDetails: 
                [{
                    maxGroupSize: parseInt(dataToDb.maxGroupSize),
                    location: {
                        address: dataToDb.address,
                        coordinates: latAndLon
                    }  
                }]
            });
    
    
            //delete the maxGroupSize from the combinedObjToDb because we combined it into additionalDetails
            //obj above
            delete combinedObjToDb.maxGroupSize;
            return combinedObjToDb;
    
        } else if (req.body.category === 'adventure'){
    
    
            const dataToDb = {...req.body};
        
            //https://stackoverflow.com/questions/16037049/why-does-javascript-map-function-return-undefined
    
            //get the location photos array from the request
            //this will be generated by the imageUploadsUtils.js utility
            const indvidualPhotosArrWithRequiredFields = req.body.individualPhotos;

            //combine the location images with the maxGroupSize and the other locations data 
            const tempArr = [];
            for (let x = 0; x < dataToDb.loc.length; x++){
                let tempObj = dataToDb.loc[x];
                dataToDb.loc[x].maxGroupSize = parseInt(dataToDb.loc[x].maxGroupSize);
                tempArr.push(Object.assign({}, tempObj, {image: indvidualPhotosArrWithRequiredFields[x]}));   
            }
    
            const locationsArr = tempArr.map(el => el.address);
    
    
            //get the coordinates for each location
            const latAndLonArray = await locationIQAPIMultipleRequest(APITOKEN, locationsArr, next);
    
            // console.log(latAndLonArray[1].data[0].lat, latAndLonArray[1].data[0].lon);
    
            const tempArr1 = []; 
    
            //combine the locations data the location coordinates and the location booked value into 
            //the tempArr1 obj.
            for (let x = 0; x < locationsArr.length; x++){
                let tempObj = {address: locationsArr[x], coordinates: [parseFloat(latAndLonArray[x].data[0].lat), parseFloat(latAndLonArray[x].data[0].lon)]};
                tempArr[x]['booked'] = false;
                tempArr1.push(Object.assign({}, tempArr[x], {location: tempObj}));   
            }        
    
            const newDataToDb = {};
    
            //https://stackoverflow.com/questions/2958841/how-to-loop-through-key-value-object-in-javascript
            for (var k in dataToDb) {
                if (dataToDb.hasOwnProperty(k)) {
                   //seperate all the other data EXCEPT the locations data into a newDataToDb obj. 
                   if (!k.startsWith('loc')) newDataToDb[k] = dataToDb[k];
                }
            }
    
            //combine the additional details
            let combinedObjToDb = Object.assign( {}, newDataToDb, { additionalDetails: 
                tempArr1
            });
    
            //convert the price to a integer
            combinedObjToDb.price = parseInt(combinedObjToDb.price);
    
            return combinedObjToDb;
        }
    }

}